parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"fP/R":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=["x","y","z"],e=function(t){Object.assign(this,{uniforms:{},geometry:{vertices:[{x:0,y:0,z:0}]},mode:0,modifiers:{},attributes:[],multiplier:1,buffers:[]}),Object.assign(this,t),this.prepareProgram(),this.prepareUniforms(),this.prepareAttributes()};e.prototype.compileShader=function(t,e){var r=this.gl.createShader(t);return this.gl.shaderSource(r,e),this.gl.compileShader(r),r},e.prototype.prepareProgram=function(){var t=this.gl,e=this.vertex,r=this.fragment,i=t.createProgram();t.attachShader(i,this.compileShader(35633,e)),t.attachShader(i,this.compileShader(35632,r)),t.linkProgram(i),t.useProgram(i),this.program=i},e.prototype.prepareUniforms=function(){for(var t=Object.keys(this.uniforms),e=0;e<t.length;e+=1){var r=this.gl.getUniformLocation(this.program,t[e]);this.uniforms[t[e]].location=r}},e.prototype.prepareAttributes=function(){void 0!==this.geometry.vertices&&this.attributes.push({name:"aPosition",size:3}),void 0!==this.geometry.normal&&this.attributes.push({name:"aNormal",size:3}),this.attributeKeys=[];for(var t=0;t<this.attributes.length;t+=1)this.attributeKeys.push(this.attributes[t].name),this.prepareAttribute(this.attributes[t])},e.prototype.prepareAttribute=function(e){for(var r=this.geometry,i=this.multiplier,s=r.vertices,n=r.normal,a=new Float32Array(i*s.length*e.size),o=0;o<i;o+=1)for(var h=e.data&&e.data(o,i),u=o*s.length*e.size,f=0;f<s.length;f+=1)for(var l=0;l<e.size;l+=1){var c=this.modifiers[e.name];a[u]=void 0!==c?c(h,f,l,this):"aPosition"===e.name?s[f][t[l]]:"aNormal"===e.name?n[f][t[l]]:h[l],u+=1}this.attributes[this.attributeKeys.indexOf(e.name)].data=a,this.prepareBuffer(this.attributes[this.attributeKeys.indexOf(e.name)])},e.prototype.prepareBuffer=function(t){var e=t.data,r=t.name,i=t.size,s=this.gl.createBuffer();this.gl.bindBuffer(34962,s),this.gl.bufferData(34962,e,35044);var n=this.gl.getAttribLocation(this.program,r);this.gl.enableVertexAttribArray(n),this.gl.vertexAttribPointer(n,i,5126,!1,!1,0),this.buffers[this.attributeKeys.indexOf(t.name)]={buffer:s,location:n,size:i}},e.prototype.render=function(t){var e=this,r=this.uniforms,i=this.multiplier,s=this.gl;s.useProgram(this.program);for(var n=0;n<this.buffers.length;n+=1){var a=this.buffers[n],o=a.location,h=a.buffer,u=a.size;s.enableVertexAttribArray(o),s.bindBuffer(34962,h),s.vertexAttribPointer(o,u,5126,!1,!1,0)}Object.keys(t).forEach(function(e){r[e].value=t[e].value}),Object.keys(r).forEach(function(t){var i=r[t];e.uniformMap[i.type](i.location,i.value)}),s.drawArrays(this.mode,0,i*this.geometry.vertices.length),this.onRender&&this.onRender(this)},e.prototype.destroy=function(){for(var t=0;t<this.buffers.length;t+=1)this.gl.deleteBuffer(this.buffers.buffer);this.gl.deleteProgram(this.program),this.gl=null};var r=function(t){var e=this;void 0===t&&(t={});var r=t.canvas;void 0===r&&(r=document.querySelector("canvas"));var i=t.context;void 0===i&&(i={});var s=t.contextType;void 0===s&&(s="experimental-webgl");var n=t.settings;void 0===n&&(n={});var a=r.getContext(s,Object.assign({alpha:!1,antialias:!1},i));Object.assign(this,{gl:a,canvas:r,uniforms:{},instances:new Map,shouldRender:!0}),Object.assign(this,{devicePixelRatio:1,clearColor:[1,1,1,1],position:{x:0,y:0,z:2}}),Object.assign(this,n),this.uniformMap={float:function(t,e){return a.uniform1f(t,e)},vec2:function(t,e){return a.uniform2fv(t,e)},vec3:function(t,e){return a.uniform3fv(t,e)},vec4:function(t,e){return a.uniform4fv(t,e)},mat2:function(t,e){return a.uniformMatrix2fv(t,!1,e)},mat3:function(t,e){return a.uniformMatrix3fv(t,!1,e)},mat4:function(t,e){return a.uniformMatrix4fv(t,!1,e)}},a.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL),!1===a.getContextAttributes().alpha&&(a.clearColor.apply(a,this.clearColor),a.clearDepth(1)),this.onSetup&&this.onSetup(a),window.addEventListener("resize",function(){return e.resize()}),this.resize(),this.render()};r.prototype.resize=function(){var t=this.gl,e=this.canvas,r=this.devicePixelRatio,i=this.position;e.width=e.clientWidth*r,e.height=e.clientHeight*r;var s=t.drawingBufferWidth,n=t.drawingBufferHeight,a=s/n;t.viewport(0,0,s,n);var o=Math.tan(Math.PI/180*22.5),h=[1,0,0,0,0,1,0,0,0,0,1,0,i.x,i.y,(a<1?1:a)*-i.z,1];this.uniforms.uProjectionMatrix={type:"mat4",value:[.5/o,0,0,0,0,a/o*.5,0,0,0,0,-100.001/99.999,-1,0,0,.001/99.999*-200,0]},this.uniforms.uViewMatrix={type:"mat4",value:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},this.uniforms.uModelMatrix={type:"mat4",value:h}},r.prototype.toggle=function(t){t!==this.shouldRender&&(this.shouldRender=void 0!==t?t:!this.shouldRender,this.shouldRender&&this.render())},r.prototype.render=function(){var t=this;this.gl.clear(16640),this.instances.forEach(function(e){e.render(t.uniforms)}),this.onRender&&this.onRender(this),this.shouldRender&&requestAnimationFrame(function(){return t.render()})},r.prototype.add=function(t,r){void 0===r&&(r={}),r.uniforms=Object.assign(r.uniforms||{},JSON.parse(JSON.stringify(this.uniforms))),Object.assign(r,{gl:this.gl,uniformMap:this.uniformMap});var i=new e(r);return this.instances.set(t,i),i},r.prototype.remove=function(t){var e=this.instances.get(t);void 0!==e&&(e.destroy(),this.instances.delete(t))},r.prototype.destroy=function(){var t=this;this.instances.forEach(function(e,r){e.destroy(),t.instances.delete(r)}),this.toggle(!1)};var i=r;exports.default=i;
},{}],"A2T1":[function(require,module,exports) {
"use strict";var t=n(require("phenomenon"));function n(t){return t&&t.__esModule?t:{default:t}}var a=4e3;function o(t){return[{x:t,y:t,z:t},{x:t,y:-t,z:t},{x:t,y:t,z:-t},{x:t,y:-t,z:t},{x:t,y:-t,z:-t},{x:t,y:t,z:-t},{x:-t,y:t,z:-t},{x:-t,y:-t,z:-t},{x:-t,y:t,z:t},{x:-t,y:-t,z:-t},{x:-t,y:-t,z:t},{x:-t,y:t,z:t},{x:-t,y:t,z:-t},{x:-t,y:t,z:t},{x:t,y:t,z:-t},{x:-t,y:t,z:t},{x:t,y:t,z:t},{x:t,y:t,z:-t},{x:-t,y:-t,z:t},{x:-t,y:-t,z:-t},{x:t,y:-t,z:t},{x:-t,y:-t,z:-t},{x:t,y:-t,z:-t},{x:t,y:-t,z:t},{x:-t,y:t,z:t},{x:-t,y:-t,z:t},{x:t,y:t,z:t},{x:-t,y:-t,z:t},{x:t,y:-t,z:t},{x:t,y:t,z:t},{x:t,y:t,z:-t},{x:t,y:-t,z:-t},{x:-t,y:t,z:-t},{x:t,y:-t,z:-t},{x:-t,y:-t,z:-t},{x:-t,y:t,z:-t}]}var i=new t.default({canvas:document.querySelector("canvas"),settings:{clearColor:[.15,.15,.15,1],position:{x:0,y:0,z:1.2},shouldRender:!0}});function e(t){return 2*(Math.random()-.5)*t}var r=[{name:"aPositionStart",data:function(t,n){return[e(1),e(1),e(1)]},size:3},{name:"aPositionEnd",data:function(t,n){return[e(1),e(1),e(1)]},size:3},{name:"aDifference",data:function(t,n){return[Math.random()]},size:1},{name:"aPointSize",data:function(t,n){return[5*Math.random()]},size:1},{name:"aOffset",data:function(t,n){return[.4*Math.random()]},size:1}],s={uProgress:{type:"float",value:1}},x="\n\n\tattribute vec3 aPosition;\n\tattribute vec3 aPositionStart;\n\tattribute vec3 aPositionEnd;\n\n\tattribute float aDifference;\n\tattribute vec3 aNormal;\n\tattribute float aPointSize;\n\tattribute float aOffset;\n\n\tuniform mat4 uProjectionMatrix;\n\tuniform mat4 uModelMatrix;\n\tuniform mat4 uViewMatrix;\n\tuniform float uProgress;\n\n\tvarying float vColor;\n\tvarying vec3 vNormal;\n\n\tmat4 rotationMatrix(vec3 axis, float angle) {\n\t\taxis = normalize(axis);\n\t\tfloat s = sin(angle);\n\t\tfloat c = cos(angle);\n\t\tfloat oc = 1.0 - c;\n\t\t\n\t\treturn mat4(\n\t\t\toc * axis.x * axis.x + c,\n\t\t\toc * axis.x * axis.y - axis.z * s,\n\t\t\toc * axis.z * axis.x + axis.y * s,\n\t\t\t0.0,\n\t\t\toc * axis.x * axis.y + axis.z * s,\n\t\t\toc * axis.y * axis.y + c,\n\t\t\toc * axis.y * axis.z - axis.x * s,\n\t\t\t0.0,\n\t\t\toc * axis.z * axis.x - axis.y * s,\n\t\t\toc * axis.y * axis.z + axis.x * s,\n\t\t\toc * axis.z * axis.z + c,\n\t\t\t0.0,\n\t\t\t0.0,\n\t\t\t0.0,\n\t\t\t0.0,\n\t\t\t1.0\n\t\t);\n\t}\n\t\n\tvec3 rotate(vec3 v, vec3 axis, float angle) {\n\t\tmat4 m = rotationMatrix(axis, angle);\n\t\treturn (m * vec4(v, 1.0)).xyz;\n\t}\n\n\tvoid main(){\n\t\tgl_PointSize = 10.0 * aPointSize;\n\t\t// vec3 light = vec3(1.0, 1.0, 1.0);\n\t\tvNormal = aNormal;\n\n\t\tfloat newp = sin(uProgress / 3.0);\n\n\t\t// float tProgress = clamp(aOffset - fract(uProgress / 10.0), 0.0, 1.0);\n\t\tfloat tProgress = clamp(aOffset - newp, 0.0, 1.0);\n\n\t\tvColor = aDifference * newp * 5.0;\n\t\t// vec3 rotatedPosition = rotate(aPosition, vec3(1.0, 1.0, 1.0), uProgress * 6.28);\n\t\t// vec3 newPosition = mix(aPositionStart, aPositionEnd, fract(uProgress / 15.0));\n\t\tvec3 rotatedPosition = rotate(aPosition, vec3(0.2, 0.2, 0.2), tProgress * 6.28);\n\t\tvec3 newPosition = newp / mix(aPositionStart, aPositionEnd, fract(tProgress / 15.0));\n\t\t// newPosition.z += fract(uProgress / 15.0);\n\n\t\t// gl_Position = uProjectionMatrix * uModelMatrix * uViewMatrix * vec4(newPosition, 1.0);\n\n\t\t// gl_Position = uProjectionMatrix * uModelMatrix * uViewMatrix * vec4(newPosition + aPosition, 1.0);\n\n\t\t// gl_Position = uProjectionMatrix * uModelMatrix * uViewMatrix * vec4(aPositionStart + aPosition, 1.0);\n\n\t\tgl_Position = uProjectionMatrix * uModelMatrix * uViewMatrix * vec4(newPosition + rotatedPosition, 1.0);\n\t}\n",c="\n\tprecision mediump float;\n\n\tvarying float vColor;\n\tvarying vec3 vNormal;\n\n\tvoid main(){\n\t\tvec3 light = vec3(1.0, 1.0, 1.0);\n\n\t\tgl_FragColor = vec4(vColor / 2.0, vColor / 5.0, vColor / 3.0, 1.0);\n\t\t// gl_FragColor = vec4(vNormal, 1.0);\n\t}\n";i.add("particles",{attributes:r,multiplier:a,uniforms:s,vertex:x,fragment:c,geometry:{vertices:o(.08)},onRender:function(t){t.uniforms.uProgress.value+=.05}});
},{"phenomenon":"fP/R"}]},{},["A2T1"], null)
//# sourceMappingURL=/app.d21874af.js.map